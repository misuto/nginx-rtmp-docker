#user  nobody;
worker_processes auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

rtmp_auto_push on;

http {
    #include       mime.types;
    #default_type  application/octet-stream;


    #access_log  logs/access.log  main;

    #sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    #keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location /on_publish {
          # set connection secure link
          secure_link $arg_st,$arg_e;
          secure_link_md5 mysecretkey$arg_app/$arg_name$arg_e; #For timebased auth


          #secure_link_secret verysecretkey;#Generate with 'echo -n '<streamname>/verysecretkey' | openssl md5 -hex'

          # bad hash
          if ($secure_link = "") {
              return 501;
          }

          # link expired
          if ($secure_link = "0") {
              return 502;
          }
          return 200;
        }

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
rtmp {
  server {
    listen 1935;
    notify_method get;
    chunk_size 4096;

    application live {#Set to verry secret
      live on;
      record off;
        ####
        #Example stream
        #rtmp url: rtmp://localhost/myapp
        #streamkey/playpath: md5(live/verysecretkey)
        ####
      allow publish all;
      #deny play all;
      #push rtmp://localhost:1935/view;
      exec avconv -i rtmp://localhost:1935/live/$name -c:a copy -c:v libx264 -b:v 3500k -preset fast -f flv rtmp://localhost:1935/view/$name;

      on_publish http://127.0.0.1:8080/on_publish;
    }
		application view {#verry public
			live on;
			allow publish 127.0.0.1;
			allow play all;
		}
  }
}
